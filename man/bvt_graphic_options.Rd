% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genePlot.R
\name{bvt_graphic_options}
\alias{bvt_graphic_options}
\title{Plotting Options In BVT}
\description{
Documenting plotting options that are universally available to BVT functions but not otherwise documented
}
\details{
We can break these options into basic categories as there are a lot of them. This will cover \emph{Plot Enviroment} with includes
legend, axis, and title formatting; \emph{Plot Formatting} which includes how points are rendered,
determines what error bar measure, etc; \emph{Style Formatting} which controls color, line types, background, etc., and finally \emph{Advanced Settings}.
Much of this can be set interactively using the shiny interface and you can see the resulting code in the advanced tab. Another general note
is that all theme options can be passed as function arguments to override theme defaults. Finally, while we will mention again in the
\emph{Advanced Settings} section, use \code{RSOverride=TRUE} to stop bvt functions from resetting the graphic environment every time, wiping out
the plot history. This is particularly important when using layouts for multiple plots or in markdown scripts. This is due to a known bug
in RStudio where graphics devices don't always update properly. It is turned on by default when using RStudio. Note that the graphics issuse
will reset and appear in the proper fashion after resizing the plotting environment manually.

\strong{Plot Enviroment}

This section covers options that format axes, labels, titles, etc.
\describe{
  \item{\code{main}}{Sets the title of the plot, overriding defaults.}
  \item{\code{subtitle}}{Sets the subtitle for the plot. This slot is empty by default and used by the \code{showCalc} option if left blank}
  \item{\code{ylab}}{Sets the y-axis title. Note \code{xlab} and \code{zlab} can be used to set titles for the x and z axes where applicable.}
  \item{\code{yLim}}{Sets the lower bounds and upper bounds, respectively, on the y-axis using a length two numeric vector. Note that \code{xLim}
and \code{zLim} can also be used where applicable.}
  \item{\code{logScale}}{Transforms the data into log scale based on the number assigned. In order to stabilize low values, a small number, typically 1, is added to all data points be default when active. Set to false to disable.
Note that data labels represent the values prior to transformation but scale is still in log. In \emph{scatter plots} and 2 dimensional \emph{density plots} (i.e. contour plots),
a numeric vector can be supplied giving log base values (or FALSE for non-log) for the x, y, and z axis, respectively}
  \item{\code{expLabels}}{If \code{logScale} is active, data labels are written as powers of the logarithm base supplied when set to TRUE.}
  \item{\code{logAdjustment}}{The number added to each data point prior to log transformation. Default is 1. Can be set to 0.}
  \item{\code{axisText}}{Length two character vector that adds set text before and/or after the axis labels. eg. \code{c("","\%")} for percentages.
For plots with multiple data axis, these can be set individually by providing a list of the form \code{list(x=c("d","CT"),y=c("","\%"))}.}
  \item{\code{groupLabels}}{Replaces the group factor level names with the strings supplied in the character vector on the categorical axis.}
  \item{\code{subgroupLabels}}{Replaces the subgroup factor level names with the strings supplied in the character vector on the categorical axis.
This will update the legend levels when appropriate.}
  \item{\code{highlightLabels}}{Replaces the highlight factor level names with the strings supplied in the character. This will updated the legend levels.}
  \item{\code{sidePlot}}{When set to TRUE, rotates the entire plot 90 degrees clockwise.}
  \item{\code{rotateY}}{Rotates the data axis labels 90 degrees when set to TRUE.}
  \item{\code{rotateGroupLabels}}{Rotates the group labels by 90 degrees.}
  \item{\code{titleSize}}{Cex like scale factor that controls the size of the plot title set with \code{main}.}
  \item{\code{groupLabSize}}{Cex like scale factor that controls the size of the categorical axis group labels that cane be set with \code{groupLabels}.}
  \item{\code{subgroupLabSize}}{Cex like scale factor that controls the size fo the subgroup labels on the categorical axis. These labels can be set with \code{subgroupLabels}.}
  \item{\code{subSize}}{Cex like scale factor controlling the size of the plot subtitle. Subtitles can be set with \code{subtitle}.}
  \item{\code{axisLabelSize}}{Cex like scale factor controling the size of the axis titles in the plot. These can be set with }
  \item{\code{yAxisLabSize}}{Cex like scale factor that controls the size of the numeric data labels.}
  \item{\code{legendSize}}{Cex like scale factor that controls the size of the legend when applicable.}
  \item{\code{groupLabelSpacing}}{Controls the distance of the categorical axis group labels from the axis.}
  \item{\code{subgroupLabelSpacing}}{Controls the distance of the categorical axis subgroup labels from the axis.}
  \item{\code{legendSpacing}}{Controls the distance between line items in the legend.}
  \item{\code{minorTick}}{Sets the number of ticks marks used between major axis ticks. Can be set to 0 or FALSE to disable.}
  \item{\code{extendTicks}}{Determines if the minor ticks should be confined between the first and last major tick marks (default for R).
Defaults to TRUE which extends ticks to end of the axis.}
}

\strong{Plot Formatting}

This section are options that impact the actual plotting area rather than the axes, labels, titles, etc.
\describe{
  \item{\code{guides}}{Determines if guide lines should be drawn on the plot area to indicate the major ticks on the data axis.}
  \item{\code{minorGuides}}{Determines if minor guide lines are drawn to indicate minor ticks on the data axis. The number of minor ticks can be
  set using \code{minorTick}. This can be useful when \code{logScale} is active.}
  \item{\code{drawPoints}}{Determines if a data point overlay is drawn. Contours, boxes, violins, error bars, etc. will still be displayed.
  For \emph{box plots}, outlier data points (based on IQR distance from the innerquartile boundaries and set using the
  \code{outliers} parameter) are still drawn as per convention. Setting \code{outliers=0} will cause the whiskers to extend to the full range, eliminating
  the need for outlier plotting if that is desired.}
  \item{\code{pointMethod}}{Determines how the data point overlay is drawn. The options are: "linear" where all points drawn
  at the same position on the categorical axis; "jitter", where points are randomly assigned a categorical axis value within an interval;
   "distribution" where points are placed in order from highest to lowest on the categorical axis interval; and "beeswarm" where points are positioned to
   not overlap but pack together as close as possible. The width of the categorical axis interval where these methods can plot is determined
   by \code{pointLaneWidth}. The precise position of these points on the graph can be obtained in a \code{\link{npData}} object at \code{npData$options$xypos}.}
  \item{\code{swarmOverflow}}{If \code{pointMethod} is set to "beeswarm" and the points are unable to fit within the the region on the categorical
  axis determined by \code{pointLaneWidth}, this overflow can be an handled in different ways: "none" this ignores the \code{pointLaneWidth}
  setting and plots out the full swarm without restriction. Note that this can cause swarms from different factor levels to overlap; "gutter"
  causes the overflow points to be plotted along the outer edge of the allowed interval; "wrap" causes the swarm to just start over plotting
  the overflow points in a new swarm on top of the existing one; "random" causes overflow points to be randomly scatter on the categorical
  axis, and "omit" which causes the overflow points to be not be drawn.}
  \item{\code{aggFun}}{This options is used by \emph{dot} and \emph{bar plots} to determine the aggregate function used, i.e. either "mean" or "median".
  This will be represented as the central band or bar height, respectively.}
  \item{\code{errFun}}{This determines the method used for drawing error bars or confidence intervals in \emph{dot} and \emph{bar plots}. The options
  are: "se" this is the standard error of the mean and is the default setting; "sd" standard deviation; "range" gives the minimum and maximum
  values. Note that unlike \emph{box plots}, this is not impacted by the \code{outliers} setting; "t95ci" returns the 95\% confidence interval
  based on the t-distribution; and "boot95ci" which calculates empirical 95\% confidence intervals of the aggregate function determined by the
  \code{aggFun} setting. This uses resampling with replacement and can take some time with larger data sets. The number of bootstraps used is
  set with \code{curvePoints} though this is likely to be changed in a future update. Note that "t95ci", "se", and "sd" only make sense with
  \code{aggFun="mean"}. Also, "sd" and "se" have a default multiple of 2x but can be altered using \code{errorMultiple}.}
  \item{\code{errorMultiple}}{The number of standard deviations (sd) or standard errors of the mean (se) to be drawn. Default is 2.}
  \item{\code{errorBars}}{Controls if error bars are drawn for \emph{dot} and \emph{bar plots}. Note that mean/median bands and bars, respectively,
  will still be drawn.}
  \item{\code{barType}}{Used only for \emph{dot plots}, this option controls how the central mean/median point is indicated per factor levels: "bar"
  this is the default. Bar width is controls by \code{width}, and thickness by \code{lWidth}; "dot", draws a ball where the size is determined
  by \code{lWidth}; "none" the mean/median point is not drawn on the graph.}
  \item{\code{drawBox}}{Determines if the boxes are drawn for \emph{box} and \emph{violin plots}. Defaults to TRUE. Note that the median bar and
  the violin will still be drawn for \emph{box plots} and \emph{violin plots}, respectively.}
  \item{\code{trimViolins}}{Controls if the violins in \emph{violin plots} are truncated at the last data point or allowed to taper off.}
  \item{\code{trimCurves}}{Determines if single variable \emph{density plot} curves are truncated at the extreme data points or allowed to taper off.
  Default value is TRUE, trimming the curves.}
  \item{\code{trimTrendLines}}{Determines if trend lines in \code{\link{geneScatter}} stop at the extreme data points or continue to the edge of the graph.}
  \item{\code{showTrendConfidence}}{Determines if trend line confidence intervals are drawn in \code{\link{geneScatter}} plots.}
  \item{sizeScale}{Cex like scale that determines the maximum difference in point size when \code{size} is active in \code{\link{geneScatter}}.
  Note that the minimum point \code{size} is controlled by the \code{pointSize} setting.}
  \item{\code{sizeLevels}}{When \code{size} is given a continuous variable in \code{\link{geneScatter}} this value determines the number of factor levels
  shown in the figure legend.}
  \item{\code{drawRug}}{Draws a rug plot indicating values underneath the density curve of \emph{density plots} if set to TRUE.}
  \item{\code{nlevels}}{Determines the number of contour levels drawn in 2D \emph{density plots}.}
}

\strong{Style Formatting}

This section contains the graphic formatting options that are primarily stylistic. Many of these options are also theme settings.
Any theme setting can be overridden by providing the value as an argument to a \emph{bvt} function. Themes are named lists of settings that allow for different values
for different plot types by appending a either "BP", "VP", "DP", "Bar" or "2D" to the setting to indicate \emph{box plots}, \emph{violin plots},
\emph{dot plots}, \emph{bar plots}, or \emph{scatter plots} (including 2D \emph{density/contour plots}), respectively. Using these codes are unnecessary
for setting options on the fly. For example providing \code{width=1.25} to a \emph{violin plot}, will automatically override the theme value
for \code{widthVP} in the current theme. You can find the valid npThemes available in your environment using \code{\link[NicePlots]{npThemes}}
or create a new theme based off of an existing template with \code{\link[NicePlots]{newNPTheme}}. Colors in \emph{bvt} are controlled by
the \code{\link{plotColors}} list object. You can read more about how to set colors by following the link: \code{\link{plotColors}}. For the
many of the settings below, if only one value is given, then all factor levels, lines, points, etc. will have that same value.
If more than one is given, the value will be assigned based on a plotting factor in order of priority: \code{highlight}, \code{subgroup},
and \code{group}. Factor level assignments are based on position in the vector, so a factor with 5 levels should be associated with either
a length 1 or >= length 5 vector. Note that values are allowed to repeat and while colors will often automatically loop back to the begining
of the vector if it runs out of values the settings below will typically not plot past that factor level. By passing a vector containing some
\code{NA} values will cause selective drop out at those positions of the line, point, fill, etc. just for that factor level.

\describe{
  \item{\code{width}}{Controls the maximum width of boxes, bars, vioins, etc.}
  \item{\code{pointLaneWidth}}{Controls the width on the categorical axis were data points can be drawn for each factor level.}
  \item{\code{vioBoxWidth}}{Determines the width of the inner box plot for \emph{violin plots}.}
  \item{\code{fontFamily}}{While future updates may support the selection of custom fonts, right now, \emph{bvt} supports font family selection
which includes the options "serif", "sans", and "mono".}
  \item{\code{pointSize}}{Cex scale to control the size of data points. This also sets the base point size when size scaling is active in \emph{scatter plots}.}
  \item{\code{pointShape}}{A numeric vector used to select the shape of points corresponding to base R's \code{pch} setting.  For \code{\link{geneScatter}}
  shape scales are directly associated with a factor using the \code{shape} option.}
  \item{\code{lWidth}}{Cex like factor controls the line width for plot features similar to \code{lwd}.}
  \item{\code{errorCapType}}{Controls how the end of the whiskers of \emph{box plots} and the tops of the error bars of \emph{dot} and \emph{bar plots}
  are drawn. Valid options are "ball", "bar" or "none". Size or width of this cap is determined by \code{errorBarCapWidth}.}
  \item{\code{errorBarCapWidth}}{Controls the size of the cap for error bars and whiskers. Setting the value to 1 will cause a bar to be the
  same width as the corresponding box or bar.}
  \item{\code{errorBarLineType}}{Controls the R line type (lty) used to draw error bars and whiskers.}
  \item{\code{vioBoxWidth}}{Controls the relative width of the box plot found at the center of violin plots.}
  \item{\code{plotColors}}{A named list of color settings used in \emph{bvt}. Information on how to use this list to make custom
  graphs can be found in the following link: \code{\link{plotColors}}.}
}

\strong{Advanced Settings}

These options are a bit more technical or at least don't fit cleanly in to one of the above categories.
\describe{
  \item{\code{outliers}}{This option controls how many inner quartile ranges (IQR) from the edge of the inner
  quartile a data point can be before being considered an outlier. The default value the standard 1.5 times the IQR.
  This principally impacts the whisker length on \emph{box plots} and can be set to 0 to automatically have the whiskers extend
  to the full range. Note that outlier points are plotted normally regardless.}
  \item{\code{useRgl}}{Determines if 3D \emph{scatter plots} and 2D density \emph{surface plots} are rendered interactively using the
  RGL library. While only listed as suggested for the package, its can be a helpful way to visualize the data.}
  \item{\code{RSOverride}}{There is a known bug in RStudio that causes plot environment not to updated properly. This make plots appear to overlap
  until manually resized, forcing a refresh. To get around this, \emph{bvt} will reset the plotting environment with every new graph when
  running on RStudio though this results in the loss of plot history. To disable this functionality, set \code{RSOverride=TRUE}. This is
  particularly important when constructing multi-panel figures and in rmarkdown files.}
  \item{\code{bandwidth}}{This controls the bandwidth setting for kernel density estimation used in \emph{violin plots} and \emph{density plots}.}
  \item{\code{curvePoints}}{This controls the number of line segments used to draw curves in \emph{bvt}. It also controls the number of bootstraps
  iterations run with using the "boot95ci" option with \code{errFun} though this is likely to change in future updates.}
  \item{\code{calcType}}{Statistical testing based on the \code{group} factor levels are automatically calculated in \code{\link{genePlot}} and \code{\link{isoPlot}}.
  The options are: "ttest" performs a pairwise t-test with  Holm–Bonferroni correction; "wilcox" performs a pairwise Wilcoxon rank sum test with
  Holm–Bonferroni correction; "anova" performs an analysis of variance test; "Tukey-HSD" performs the Tukey range test or honestly significant
  difference test; "none" disables statistical testing. Note that \code{subgroup} and \code{highlight} factor levels are ignored. The summery
  results can be reported automatically by setting \code{verbose=TRUE} or by looking at the stats section of an \code{\link{npData}} object returned by
  \code{\link{genePlot}} or \code{\link{isoPlot}}, i.e. \code{npData$stats}.}
  \item{\code{chowCalc}}{If set to TRUE and \code{subtitle} is NULL, the p-value from ANOVA or t-test/wilcoxon comparisons of two groups will be
  displayed below the graph.}
  \item{\code{corMethod}}{This is used by \code{\link{geneScatter}} to calculate correlation statistics for trend lines if present. The options are passed
  to \code{\link[stats]{cor.test}} and can be set to "pearson", "kendall", or "spearman". Full linear model and correlation data can be found in
  the returned \code{\link{npData}} object at \code{npData$stats}.}
  \item{\code{verbose}}{Causes statical testing results and descriptive statistics to print as output when set to TRUE.}
}
}
\seealso{
\code{\link{plotColors}}, \code{\link{genePlot}}, \code{\link{isoPlot}}, \code{\link{geneScatter}}
}
